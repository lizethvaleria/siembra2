{"version":3,"file":"index.cjs.js","sources":["../src/api/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from 'firebase';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nimport type { app } from 'firebase-admin';\nimport { _FirebaseApp } from '@firebase/app-types/private';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\nimport * as request from 'request';\nimport { base64 } from '@firebase/util';\nimport { setLogLevel, LogLevel } from '@firebase/logger';\nimport { Component, ComponentType } from '@firebase/component';\n\nconst { firestore, database, storage } = firebase;\nexport { firestore, database, storage };\n\n/** If this environment variable is set, use it for the database emulator's address. */\nconst DATABASE_ADDRESS_ENV: string = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/** The default address for the local database emulator. */\nconst DATABASE_ADDRESS_DEFAULT: string = 'localhost:9000';\n\n/** If this environment variable is set, use it for the Firestore emulator. */\nconst FIRESTORE_ADDRESS_ENV: string = 'FIRESTORE_EMULATOR_HOST';\n/** The default address for the local Firestore emulator. */\nconst FIRESTORE_ADDRESS_DEFAULT: string = 'localhost:8080';\n\n/** If this environment variable is set, use it for the Storage emulator. */\nconst FIREBASE_STORAGE_ADDRESS_ENV: string = 'FIREBASE_STORAGE_EMULATOR_HOST';\nconst CLOUD_STORAGE_ADDRESS_ENV: string = 'STORAGE_EMULATOR_HOST';\n/** The default address for the local Firestore emulator. */\nconst STORAGE_ADDRESS_DEFAULT: string = 'localhost:9199';\n\n/** Environment variable to locate the Emulator Hub */\nconst HUB_HOST_ENV: string = 'FIREBASE_EMULATOR_HUB';\n/** The default address for the Emulator Hub */\nconst HUB_HOST_DEFAULT: string = 'localhost:4400';\n\n/** The actual address for the database emulator */\nlet _databaseHost: string | undefined = undefined;\n\n/** The actual address for the Firestore emulator */\nlet _firestoreHost: string | undefined = undefined;\n\n/** The actual address for the Storage emulator */\nlet _storageHost: string | undefined = undefined;\n\n/** The actual address for the Emulator Hub */\nlet _hubHost: string | undefined = undefined;\n\nexport type Provider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\nexport type FirebaseIdToken = {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique id\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique id, must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: Provider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in Provider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: any;\n};\n\n// To avoid a breaking change, we accept the 'uid' option here, but\n// new users should prefer 'sub' instead.\nexport type TokenOptions = Partial<FirebaseIdToken> & { uid?: string };\n\n/**\n * Host/port configuration for applicable Firebase Emulators.\n */\nexport type FirebaseEmulatorOptions = {\n  firestore?: {\n    host: string;\n    port: number;\n  };\n  database?: {\n    host: string;\n    port: number;\n  };\n  storage?: {\n    host: string;\n    port: number;\n  };\n  hub?: {\n    host: string;\n    port: number;\n  };\n};\n\nfunction createUnsecuredJwt(token: TokenOptions, projectId?: string): string {\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    kid: 'fakekid',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'fake-project';\n  const iat = token.iat || 0;\n  const uid = token.sub || token.uid || token.user_id;\n  if (!uid) {\n    throw new Error(\"Auth must contain 'sub', 'uid', or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat: iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub: uid,\n    user_id: uid,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Remove the uid option since it's not actually part of the token spec.\n  if (payload.uid) {\n    delete payload.uid;\n  }\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64.encodeString(JSON.stringify(header), /*webSafe=*/ false),\n    base64.encodeString(JSON.stringify(payload), /*webSafe=*/ false),\n    signature\n  ].join('.');\n}\n\nexport function apps(): firebase.app.App[] {\n  return firebase.apps;\n}\n\nexport type AppOptions = {\n  databaseName?: string;\n  projectId?: string;\n  storageBucket?: string;\n  auth?: TokenOptions;\n};\n/** Construct an App authenticated with options.auth. */\nexport function initializeTestApp(options: AppOptions): firebase.app.App {\n  const jwt = options.auth\n    ? createUnsecuredJwt(options.auth, options.projectId)\n    : undefined;\n\n  return initializeApp(\n    jwt,\n    options.databaseName,\n    options.projectId,\n    options.storageBucket\n  );\n}\n\nexport type AdminAppOptions = {\n  databaseName?: string;\n  projectId?: string;\n  storageBucket?: string;\n};\n/** Construct an App authenticated as an admin user. */\nexport function initializeAdminApp(options: AdminAppOptions): app.App {\n  const admin = require('firebase-admin');\n\n  const app: app.App = admin.initializeApp(\n    getAppOptions(\n      options.databaseName,\n      options.projectId,\n      options.storageBucket\n    ),\n    getRandomAppName()\n  );\n\n  if (options.projectId) {\n    app.firestore().settings({\n      host: getFirestoreHost(),\n      ssl: false\n    });\n  }\n\n  return app;\n}\n\n/**\n * Set the host and port configuration for applicable emulators. This will override any values\n * found in environment variables. Must be called before initializeAdminApp or initializeTestApp.\n *\n * @param options options object.\n */\nexport function useEmulators(options: FirebaseEmulatorOptions): void {\n  if (!(options.database || options.firestore || options.storage || options.hub)) {\n    throw new Error(\n      \"Argument to useEmulators must contain at least one of 'database', 'firestore', 'storage', or 'hub'.\"\n    );\n  }\n\n  if (options.database) {\n    _databaseHost = getAddress(options.database.host, options.database.port);\n  }\n\n  if (options.firestore) {\n    _firestoreHost = getAddress(options.firestore.host, options.firestore.port);\n  }\n\n  if (options.storage) {\n    _storageHost = getAddress(options.storage.host, options.storage.port);\n  }\n\n  if (options.hub) {\n    _hubHost = getAddress(options.hub.host, options.hub.port);\n  }\n}\n\n/**\n * Use the Firebase Emulator hub to discover other running emulators. Call useEmulators() with\n * the result to configure the library to use the discovered emulators.\n *\n * @param hubHost the host where the Emulator Hub is running (ex: 'localhost')\n * @param hubPort the port where the Emulator Hub is running (ex: 4400)\n */\nexport async function discoverEmulators(\n  hubHost?: string,\n  hubPort?: number\n): Promise<FirebaseEmulatorOptions> {\n  if ((hubHost && !hubPort) || (!hubHost && hubPort)) {\n    throw new Error(\n      `Invalid configuration hubHost=${hubHost} and hubPort=${hubPort}. If either parameter is supplied, both must be defined.`\n    );\n  }\n\n  const hubAddress =\n    hubHost && hubPort ? getAddress(hubHost, hubPort) : getHubHost();\n\n  const res = await requestPromise(request.get, {\n    method: 'GET',\n    uri: `http://${hubAddress}/emulators`\n  });\n  if (res.statusCode !== 200) {\n    throw new Error(\n      `HTTP Error ${res.statusCode} when attempting to reach Emulator Hub at ${hubAddress}, are you sure it is running?`\n    );\n  }\n\n  const options: FirebaseEmulatorOptions = {};\n\n  const data = JSON.parse(res.body);\n\n  if (data.database) {\n    options.database = {\n      host: data.database.host,\n      port: data.database.port\n    };\n  }\n\n  if (data.firestore) {\n    options.firestore = {\n      host: data.firestore.host,\n      port: data.firestore.port\n    };\n  }\n\n  if (data.storage) {\n    options.storage = {\n      host: data.storage.host,\n      port: data.storage.port\n    };\n  }\n\n  if (data.hub) {\n    options.hub = {\n      host: data.hub.host,\n      port: data.hub.port\n    };\n  }\n\n  return options;\n}\n\nfunction getAddress(host: string, port: number) {\n  if (host.includes('::')) {\n    return `[${host}]:${port}`;\n  } else {\n    return `${host}:${port}`;\n  }\n}\n\nfunction getDatabaseHost() {\n  if (!_databaseHost) {\n    const fromEnv = process.env[DATABASE_ADDRESS_ENV];\n    if (fromEnv) {\n      _databaseHost = fromEnv;\n    } else {\n      console.warn(\n        `Warning: ${DATABASE_ADDRESS_ENV} not set, using default value ${DATABASE_ADDRESS_DEFAULT}`\n      );\n      _databaseHost = DATABASE_ADDRESS_DEFAULT;\n    }\n  }\n\n  return _databaseHost;\n}\n\nfunction getFirestoreHost() {\n  if (!_firestoreHost) {\n    const fromEnv = process.env[FIRESTORE_ADDRESS_ENV];\n    if (fromEnv) {\n      _firestoreHost = fromEnv;\n    } else {\n      console.warn(\n        `Warning: ${FIRESTORE_ADDRESS_ENV} not set, using default value ${FIRESTORE_ADDRESS_DEFAULT}`\n      );\n      _firestoreHost = FIRESTORE_ADDRESS_DEFAULT;\n    }\n  }\n\n  return _firestoreHost;\n}\n\nfunction getStorageHost() {\n  if (!_storageHost) {\n    const fromEnv =\n      process.env[FIREBASE_STORAGE_ADDRESS_ENV] ||\n      process.env[CLOUD_STORAGE_ADDRESS_ENV];\n    if (fromEnv) {\n      // The STORAGE_EMULATOR_HOST env var is an older Cloud Standard which includes http:// while\n      // the FIREBASE_STORAGE_EMULATOR_HOST is a newer variable supported beginning in the Admin\n      // SDK v9.7.0 which does not have the protocol.\n      _storageHost = fromEnv.replace('http://', '');\n    } else {\n      console.warn(\n        `Warning: ${FIREBASE_STORAGE_ADDRESS_ENV} not set, using default value ${STORAGE_ADDRESS_DEFAULT}`\n      );\n      _storageHost = STORAGE_ADDRESS_DEFAULT;\n    }\n  }\n\n  return _storageHost;\n}\n\nfunction getHubHost() {\n  if (!_hubHost) {\n    const fromEnv = process.env[HUB_HOST_ENV];\n    if (fromEnv) {\n      _hubHost = fromEnv;\n    } else {\n      console.warn(\n        `Warning: ${HUB_HOST_ENV} not set, using default value ${HUB_HOST_DEFAULT}`\n      );\n      _hubHost = HUB_HOST_DEFAULT;\n    }\n  }\n\n  return _hubHost;\n}\n\nfunction parseHost(host: string): { hostname: string; port: number } {\n  const withProtocol = host.startsWith(\"http\") ? host : `http://${host}`;\n  const u = new URL(withProtocol);\n  return {\n    hostname: u.hostname,\n    port: Number.parseInt(u.port, 10)\n  };\n}\n\nfunction getRandomAppName(): string {\n  return 'app-' + new Date().getTime() + '-' + Math.random();\n}\n\nfunction getDatabaseUrl(databaseName: string) {\n  return `http://${getDatabaseHost()}?ns=${databaseName}`;\n}\n\nfunction getAppOptions(\n  databaseName?: string,\n  projectId?: string,\n  storageBucket?: string\n): { [key: string]: string } {\n  let appOptions: { [key: string]: string } = {};\n\n  if (databaseName) {\n    appOptions['databaseURL'] = getDatabaseUrl(databaseName);\n  }\n\n  if (projectId) {\n    appOptions['projectId'] = projectId;\n  }\n\n  if (storageBucket) {\n    appOptions['storageBucket'] = storageBucket;\n  }\n\n  return appOptions;\n}\n\nfunction initializeApp(\n  accessToken?: string,\n  databaseName?: string,\n  projectId?: string,\n  storageBucket?: string\n): firebase.app.App {\n  const appOptions = getAppOptions(databaseName, projectId, storageBucket);\n  const app = firebase.initializeApp(appOptions, getRandomAppName());\n  if (accessToken) {\n    const mockAuthComponent = new Component(\n      'auth-internal',\n      () =>\n        ({\n          getToken: async () => ({ accessToken: accessToken }),\n          getUid: () => null,\n          addAuthTokenListener: listener => {\n            // Call listener once immediately with predefined accessToken.\n            listener(accessToken);\n          },\n          removeAuthTokenListener: () => {}\n        } as FirebaseAuthInternal),\n      ComponentType.PRIVATE\n    );\n\n    ((app as unknown) as _FirebaseApp)._addOrOverwriteComponent(\n      mockAuthComponent\n    );\n  }\n  if (databaseName) {\n    const { hostname, port } = parseHost(getDatabaseHost());\n    app.database().useEmulator(hostname, port);\n\n    // Toggle network connectivity to force a reauthentication attempt.\n    // This mitigates a minor race condition where the client can send the\n    // first database request before authenticating.\n    app.database().goOffline();\n    app.database().goOnline();\n  }\n  if (projectId) {\n    const { hostname, port } = parseHost(getFirestoreHost());\n    app.firestore().useEmulator(hostname, port);\n  }\n  if (storageBucket) {\n    const { hostname, port } = parseHost(getStorageHost());\n    app.storage().useEmulator(hostname, port);\n  }\n  /**\n  Mute warnings for the previously-created database and whatever other\n  objects were just created.\n */\n  setLogLevel(LogLevel.ERROR);\n  return app;\n}\n\nexport type LoadDatabaseRulesOptions = {\n  databaseName: string;\n  rules: string;\n};\nexport async function loadDatabaseRules(\n  options: LoadDatabaseRulesOptions\n): Promise<void> {\n  if (!options.databaseName) {\n    throw Error('databaseName not specified');\n  }\n\n  if (!options.rules) {\n    throw Error('must provide rules to loadDatabaseRules');\n  }\n\n  const resp = await requestPromise(request.put, {\n    method: 'PUT',\n    uri: `http://${getDatabaseHost()}/.settings/rules.json?ns=${\n      options.databaseName\n    }`,\n    headers: { Authorization: 'Bearer owner' },\n    body: options.rules\n  });\n\n  if (resp.statusCode !== 200) {\n    throw new Error(JSON.parse(resp.body.error));\n  }\n}\n\nexport type LoadFirestoreRulesOptions = {\n  projectId: string;\n  rules: string;\n};\nexport async function loadFirestoreRules(\n  options: LoadFirestoreRulesOptions\n): Promise<void> {\n  if (!options.projectId) {\n    throw new Error('projectId not specified');\n  }\n\n  if (!options.rules) {\n    throw new Error('must provide rules to loadFirestoreRules');\n  }\n\n  const resp = await requestPromise(request.put, {\n    method: 'PUT',\n    uri: `http://${getFirestoreHost()}/emulator/v1/projects/${\n      options.projectId\n    }:securityRules`,\n    body: JSON.stringify({\n      rules: {\n        files: [{ content: options.rules }]\n      }\n    })\n  });\n\n  if (resp.statusCode !== 200) {\n    throw new Error(JSON.parse(resp.body.error));\n  }\n}\n\nexport type LoadStorageRulesOptions = {\n  rules: string;\n};\nexport async function loadStorageRules(\n  options: LoadStorageRulesOptions\n): Promise<void> {\n  if (!options.rules) {\n    throw new Error('must provide rules to loadStorageRules');\n  }\n\n  const resp = await requestPromise(request.put, {\n    method: 'PUT',\n    uri: `http://${getStorageHost()}/internal/setRules`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      rules: {\n        files: [{ name: 'storage.rules', content: options.rules }]\n      }\n    })\n  });\n\n  if (resp.statusCode !== 200) {\n    throw new Error(resp.body);\n  }\n}\n\nexport type ClearFirestoreDataOptions = {\n  projectId: string;\n};\nexport async function clearFirestoreData(\n  options: ClearFirestoreDataOptions\n): Promise<void> {\n  if (!options.projectId) {\n    throw new Error('projectId not specified');\n  }\n\n  const resp = await requestPromise(request.delete, {\n    method: 'DELETE',\n    uri: `http://${getFirestoreHost()}/emulator/v1/projects/${\n      options.projectId\n    }/databases/(default)/documents`,\n    body: JSON.stringify({\n      database: `projects/${options.projectId}/databases/(default)`\n    })\n  });\n\n  if (resp.statusCode !== 200) {\n    throw new Error(JSON.parse(resp.body.error));\n  }\n}\n\n/**\n * Run a setup function with background Cloud Functions triggers disabled. This can be used to\n * import data into the Realtime Database or Cloud Firestore emulator without triggering locally\n * emulated Cloud Functions.\n *\n * This method only works with Firebase CLI version 8.13.0 or higher.\n *\n * @param fn an function which returns a promise.\n */\nexport async function withFunctionTriggersDisabled<TResult>(\n  fn: () => TResult | Promise<TResult>\n): Promise<TResult> {\n  const hubHost = getHubHost();\n\n  // Disable background triggers\n  const disableRes = await requestPromise(request.put, {\n    method: 'PUT',\n    uri: `http://${hubHost}/functions/disableBackgroundTriggers`\n  });\n  if (disableRes.statusCode !== 200) {\n    throw new Error(\n      `HTTP Error ${disableRes.statusCode} when disabling functions triggers, are you using firebase-tools 8.13.0 or higher?`\n    );\n  }\n\n  // Run the user's function\n  let result: TResult | undefined = undefined;\n  try {\n    result = await fn();\n  } finally {\n    // Re-enable background triggers\n    const enableRes = await requestPromise(request.put, {\n      method: 'PUT',\n      uri: `http://${hubHost}/functions/enableBackgroundTriggers`\n    });\n    if (enableRes.statusCode !== 200) {\n      throw new Error(\n        `HTTP Error ${enableRes.statusCode} when enabling functions triggers, are you using firebase-tools 8.13.0 or higher?`\n      );\n    }\n  }\n\n  // Return the user's function result\n  return result;\n}\n\nexport function assertFails(pr: Promise<any>): any {\n  return pr.then(\n    (v: any) => {\n      return Promise.reject(\n        new Error('Expected request to fail, but it succeeded.')\n      );\n    },\n    (err: any) => {\n      const errCode = (err && err.code && err.code.toLowerCase()) || '';\n      const errMessage =\n        (err && err.message && err.message.toLowerCase()) || '';\n      const isPermissionDenied =\n        errCode === 'permission-denied' ||\n        errCode === 'permission_denied' ||\n        errMessage.indexOf('permission_denied') >= 0 ||\n        errMessage.indexOf('permission denied') >= 0;\n\n      if (!isPermissionDenied) {\n        return Promise.reject(\n          new Error(\n            `Expected PERMISSION_DENIED but got unexpected error: ${err}`\n          )\n        );\n      }\n      return err;\n    }\n  );\n}\n\nexport function assertSucceeds(pr: Promise<any>): any {\n  return pr;\n}\n\nfunction requestPromise(\n  method: typeof request.get,\n  options: request.CoreOptions & request.UriOptions\n): Promise<{ statusCode: number; body: any }> {\n  return new Promise((resolve, reject) => {\n    const callback: request.RequestCallback = (err, resp, body) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ statusCode: resp.statusCode, body });\n      }\n    };\n\n    // Unfortunately request's default method is not very test-friendly so having\n    // the caler pass in the method here makes this whole thing compatible with sinon\n    method(options, callback);\n  });\n}\n"],"names":["firebase","base64","request.get","Component","setLogLevel","LogLevel","request.put","request.delete"],"mappings":"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"}